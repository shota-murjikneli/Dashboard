{"ast":null,"code":"import { BehaviorSubject, Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let UserSharedService = /*#__PURE__*/(() => {\n  class UserSharedService {\n    constructor() {\n      this.usersSubject = new BehaviorSubject([]);\n      this.users$ = this.usersSubject.asObservable();\n    }\n\n    setUsers(users) {\n      this.usersSubject.next(users);\n    }\n\n    addUser(user) {\n      const users = this.usersSubject.getValue();\n      users.push(user);\n      this.setUsers(users);\n      localStorage.setItem('users', JSON.stringify(users));\n    }\n\n    getUser(id) {\n      const users = this.usersSubject.getValue();\n      const user = users.find(u => u.id === id);\n      return new Observable(observer => {\n        observer.next(user);\n        observer.complete();\n      });\n    }\n\n    updateUser(updatedUser) {\n      const users = this.usersSubject.getValue();\n      const index = users.findIndex(u => u.id === updatedUser.id);\n\n      if (index !== -1) {\n        users[index] = updatedUser;\n        this.setUsers(users);\n        localStorage.setItem('users', JSON.stringify(users));\n      }\n\n      return new Observable(observer => {\n        observer.next();\n        observer.complete();\n      });\n    }\n\n  }\n\n  UserSharedService.ɵfac = function UserSharedService_Factory(t) {\n    return new (t || UserSharedService)();\n  };\n\n  UserSharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserSharedService,\n    factory: UserSharedService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserSharedService;\n})();","map":null,"metadata":{},"sourceType":"module"}