{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor() {\n      this.apiUrl = 'https://jsonplaceholder.typicode.com/users';\n    }\n\n    getUsers() {\n      const storedUsers = JSON.parse(localStorage.getItem('users')) || [];\n      const loggedInUser = JSON.parse(localStorage.getItem('currentUser'));\n      const usersToShow = loggedInUser ? storedUsers.filter(user => user.email !== loggedInUser.email) : [];\n      return of(usersToShow).pipe(catchError(this.handleError('getUsers', [])));\n    }\n\n    handleError(operation = 'operation', result) {\n      return error => {\n        console.error(error);\n        return of(result);\n      };\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)();\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}